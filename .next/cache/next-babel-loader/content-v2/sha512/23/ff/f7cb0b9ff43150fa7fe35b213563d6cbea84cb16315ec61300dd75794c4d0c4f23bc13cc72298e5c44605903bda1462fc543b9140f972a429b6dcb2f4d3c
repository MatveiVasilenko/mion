{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MotichProduction\\\\motich\\\\views\\\\auth\\\\AuthLoginView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport classes from './../../styles/views/auth-view-styles.module.scss';\nimport Input from './../../widgets/form/components/Input';\n\nconst AuthLoginView = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      email: e.target.value\n    }));\n  };\n\n  const dataSender = async () => {\n    fetch(`${NET.BACK_URL}/login`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json' // 'Authorization': 'Bearer ' + this.state.clientToken,\n\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          localStorage.setItem('userToken', data.token);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.wrapper__window,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: data.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.input,\n          value: data.email,\n          placeholder: \"email\",\n          onChange: e => {\n            setData(_objectSpread(_objectSpread({}, data), {}, {\n              email: e.target.value\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.input,\n          value: data.password,\n          placeholder: \"password\",\n          type: \"password\",\n          onChange: e => {\n            setData(_objectSpread(_objectSpread({}, data), {}, {\n              password: e.target.value\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btn,\n        onClick: dataSender,\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnSub,\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AuthLoginView;","map":{"version":3,"sources":["D:/MotichProduction/motich/views/auth/AuthLoginView.js"],"names":["React","useState","classes","Input","AuthLoginView","data","setData","email","password","handleChange","e","target","value","dataSender","fetch","NET","BACK_URL","method","body","JSON","stringify","headers","then","response","status","json","localStorage","setItem","token","wrapper","wrapper__window","title","inputWrapper","input","btn","btnSub"],"mappings":"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","sourcesContent":["import React, {\r\n    useState\r\n} from 'react'\r\nimport classes from './../../styles/views/auth-view-styles.module.scss'\r\nimport Input from './../../widgets/form/components/Input';\r\n\r\nconst AuthLoginView = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setData({\r\n            ...data,\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    const dataSender = async () => {\r\n        fetch(`${NET.BACK_URL}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                // 'Authorization': 'Bearer ' + this.state.clientToken,\r\n            }\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                response.json().then((data) => {\r\n                    localStorage.setItem('userToken', data.token)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.wrapper__window}>\r\n                <div className={classes.title}>Авторизация</div>\r\n                <Input \r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                />\r\n                <div className={classes.inputWrapper}>\r\n                    <input \r\n                    className={classes.input} \r\n                    value={data.email} \r\n                    placeholder={\"email\"}\r\n                    onChange={(e) => {\r\n                        setData({\r\n                            ...data,\r\n                            email: e.target.value\r\n                        })\r\n                    }}/>\r\n                </div>\r\n                <div className={classes.inputWrapper}>\r\n                    <input \r\n                        className={classes.input} \r\n                        value={data.password} \r\n                        placeholder={\"password\"}\r\n                        type=\"password\"\r\n                        onChange={(e) => {\r\n                        setData({\r\n                            ...data,\r\n                            password: e.target.value\r\n                        })\r\n                    }}/>\r\n                </div>\r\n                <div>Забыли пароль</div>\r\n                <div\r\n                    className={classes.btn}\r\n                    onClick={dataSender}\r\n                >Вход</div>\r\n                <div className={classes.btnSub}>Регистрация</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AuthLoginView"]},"metadata":{},"sourceType":"module"}