{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Office from '../../../../layouts/office/Office';\nimport { NET } from '../../../../network';\nimport ModulesView from './../../../../views/office/modules/ModulesView';\n\nconst OfficeCourses = ({\n  modules = []\n}) => {\n  return /*#__PURE__*/_jsx(Office, {\n    children: /*#__PURE__*/_jsx(ModulesView, {\n      modules: modules\n    })\n  });\n};\n\nexport async function getServerSideProps({\n  req,\n  query\n}) {\n  // const {userToken, setUserToken, lang} = useContext(UserContext)\n  // const cookies = cookie.parse(req?.headers?.cookie || '');\n  // const userToken = cookies?.session_token;\n  const headers = {\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest',\n      'Content-Type': 'application/json;charset=UTF-8' // Authorization: `Bearer ${userToken}`,\n\n    },\n    method: 'GET'\n  };\n  const res = await fetch(`${NET.BACK_URL}/modules/${query.course_id}`, headers);\n  const modules = await res.json(); // const globalErr = data.globalErr || data.globalErr;\n  // if (globalErr) { setAlertData({ type: 'error', cont: globalErr }); } else if (data) { \n  //     setDataProduct(data.data)\n  // }\n\n  return {\n    props: {\n      modules\n    } // will be passed to the page component as props\n\n  };\n}\nexport default OfficeCourses;","map":null,"metadata":{},"sourceType":"module"}