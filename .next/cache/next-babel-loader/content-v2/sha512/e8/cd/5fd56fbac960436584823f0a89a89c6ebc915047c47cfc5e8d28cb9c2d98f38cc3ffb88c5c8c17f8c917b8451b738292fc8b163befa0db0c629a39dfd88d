{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useMemo, useCallback, useRef } from 'react';\nimport ReactPlayer from 'react-player';\nimport TextField from '../../../../widgets/ui/TextField';\nimport { NET } from './../../../../network';\nimport classes from './../../../../styles/views/module-view-styles.module.scss';\nimport ControlsVideo from './ControlsVideo';\nimport screenfull from 'screenfull';\n\nconst Video = ({\n  path,\n  description\n}) => {\n  //Controls block state\n  const {\n    0: showControls,\n    1: setShowControls\n  } = useState(false); // const [showPlay, setShowPlay] = useState(false)\n\n  const {\n    0: volume,\n    1: setVolume\n  } = useState(1);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    playing: true\n  });\n  const {\n    playing\n  } = state;\n  const refPlayer = React.useRef(null);\n  const refPlayerContainer = React.useRef(null); //FunctionControls\n\n  const playVideo = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      playing: !playing\n    }));\n    setTimeout(() => {\n      setShowControls(false);\n    }, 3000);\n  };\n\n  const toggleFullScreen = () => {\n    screenfull.toggle(refPlayerContainer.current);\n  };\n\n  const changeVolume = v => {\n    setVolume(Number(v));\n  };\n\n  const progressVideo = changeData => {\n    setState(_objectSpread(_objectSpread({}, state), changeData));\n  };\n\n  const progressVideoContols = e => {\n    console.log(e); // console.log(parseFloat(e))\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      played: Number(e)\n    }));\n    refPlayer.current.seekTo(Number(e));\n  };\n\n  const durationVideo = useCallback(e => {// setProgress({\n    //     ...progress,\n    //     end: e\n    // })\n  }, []);\n\n  const handleFastwind = () => {\n    refPlayer.current.seekTo(refPlayer.current.getCurrentTime() + 10);\n  };\n\n  console.log(`${NET.BACK_URL_MODULE}${path}`);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.wrapper,\n    onClick: () => setShowControls(true),\n    onMouseEnter: () => setShowControls(true),\n    onMouseLeave: () => {\n      setTimeout(() => {\n        setShowControls(false);\n      }, 3000);\n    },\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      ref: refPlayerContainer,\n      className: classes.videoWrapper,\n      children: [/*#__PURE__*/_jsx(ReactPlayer, {\n        url: `${NET.BACK_URL_MODULE}${path}`,\n        playing: playing,\n        volume: volume,\n        onProgress: progressVideo,\n        onDuration: e => durationVideo(e),\n        ref: refPlayer,\n        width: \"100%\",\n        height: \"auto\",\n        onSeek: e => console.log(e),\n        seeking: false,\n        pip: false,\n        light: false\n      }), /*#__PURE__*/_jsx(ControlsVideo, {\n        showControls: showControls,\n        classes: classes,\n        playing: playing,\n        volume: volume,\n        progress: state,\n        funcs: {\n          play: playVideo,\n          volume: changeVolume,\n          progress: progressVideoContols,\n          full: toggleFullScreen\n        },\n        onFastwind: handleFastwind\n      })]\n    }), /*#__PURE__*/_jsx(TextField, {\n      children: description\n    })]\n  });\n};\n\nexport default Video;","map":null,"metadata":{},"sourceType":"module"}