{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MotichProduction\\\\motich\\\\widgets\\\\form\\\\components\\\\Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport classes from './../../../styles/widgets/form-styles.module.scss';\nimport svgSprite from './../../../project/svg/svgSprite';\nimport FieldError from './FieldError';\nimport useWindowDimensions from './../../../global/utils';\n\nconst Input = ({\n  attribute,\n  data,\n  setData,\n  placeholder,\n  type,\n  svgIcon,\n  errors\n}) => {\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const error = errors[attribute];\n  const {\n    width\n  } = useWindowDimensions();\n  const mobile = width < 768 ? true : false;\n  const svgStyle = {\n    width: mobile ? '20px' : '45px',\n    height: mobile ? '20px' : '25px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: error ? [classes.input, classes.inputError].join(' ') : classes.input,\n        value: data[attribute],\n        placeholder: placeholder,\n        type: !showPassword ? type : 'text',\n        onChange: e => {\n          setData(_objectSpread(_objectSpread({}, data), {}, {\n            [attribute]: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), svgIcon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputIcon,\n        children: svgSprite(svgIcon, svgStyle)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 30\n      }, this), type === 'password' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputIconPassword,\n        onClick: () => setShowPassword(!showPassword),\n        children: svgSprite(!showPassword ? 'OpenEye' : 'CloseEye', svgStyle)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), !!error && /*#__PURE__*/_jsxDEV(FieldError, {\n      classes: classes,\n      textError: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Input;","map":{"version":3,"sources":["D:/MotichProduction/motich/widgets/form/components/Input.js"],"names":["React","useState","classes","svgSprite","FieldError","useWindowDimensions","Input","attribute","data","setData","placeholder","type","svgIcon","errors","showPassword","setShowPassword","error","width","mobile","svgStyle","height","inputWrapper","input","inputError","join","e","target","value","inputIcon","inputIconPassword"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IACIC,QADJ,QAEO,OAFP;AAGA,OAAOC,OAAP,MAAoB,mDAApB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA,SADW;AAEXC,EAAAA,IAFW;AAGXC,EAAAA,OAHW;AAIXC,EAAAA,WAJW;AAKXC,EAAAA,IALW;AAMXC,EAAAA,OANW;AAOXC,EAAAA;AAPW,CAAD,KAQR;AACF,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMe,KAAK,GAAGH,MAAM,CAACN,SAAD,CAApB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYZ,mBAAmB,EAArC;AACA,QAAMa,MAAM,GAAGD,KAAK,GAAG,GAAR,GAAc,IAAd,GAAqB,KAApC;AAEA,QAAME,QAAQ,GAAG;AACbF,IAAAA,KAAK,EAAEC,MAAM,GAAG,MAAH,GAAY,MADZ;AAEbE,IAAAA,MAAM,EAAEF,MAAM,GAAG,MAAH,GAAY;AAFb,GAAjB;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACmB,YAAxB;AAAA,8BACI;AACA,QAAA,SAAS,EAAEL,KAAK,GAAG,CAACd,OAAO,CAACoB,KAAT,EAAgBpB,OAAO,CAACqB,UAAxB,EAAoCC,IAApC,CAAyC,GAAzC,CAAH,GAAmDtB,OAAO,CAACoB,KAD3E;AAEA,QAAA,KAAK,EAAEd,IAAI,CAACD,SAAD,CAFX;AAGA,QAAA,WAAW,EAAEG,WAHb;AAIA,QAAA,IAAI,EAAE,CAACI,YAAD,GAAgBH,IAAhB,GAAuB,MAJ7B;AAKA,QAAA,QAAQ,EAAGc,CAAD,IAAO;AACbhB,UAAAA,OAAO,iCACAD,IADA;AAEH,aAACD,SAAD,GAAakB,CAAC,CAACC,MAAF,CAASC;AAFnB,aAAP;AAIH;AAVD;AAAA;AAAA;AAAA;AAAA,cADJ,EAYKf,OAAO,iBAAK;AAAK,QAAA,SAAS,EAAEV,OAAO,CAAC0B,SAAxB;AAAA,kBACRzB,SAAS,CAACS,OAAD,EAAUO,QAAV;AADD;AAAA;AAAA;AAAA;AAAA,cAZjB,EAeKR,IAAI,KAAK,UAAT,iBAAwB;AACrB,QAAA,SAAS,EAAET,OAAO,CAAC2B,iBADE;AAErB,QAAA,OAAO,EAAE,MAAMd,eAAe,CAAC,CAACD,YAAF,CAFT;AAAA,kBAIpBX,SAAS,CAAC,CAACW,YAAD,GAAgB,SAAhB,GAA4B,UAA7B,EAAyCK,QAAzC;AAJW;AAAA;AAAA;AAAA;AAAA,cAf7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAyBS,CAAC,CAACH,KAAF,iBAAW,QAAC,UAAD;AACR,MAAA,OAAO,EAAEd,OADD;AAER,MAAA,SAAS,EAAEc;AAFH;AAAA;AAAA;AAAA;AAAA,YAzBpB;AAAA,kBADJ;AAgCH,CAlDD;;AAmDA,eAAeV,KAAf","sourcesContent":["import React, {\r\n    useState\r\n} from 'react'\r\nimport classes from './../../../styles/widgets/form-styles.module.scss'\r\nimport svgSprite from './../../../project/svg/svgSprite';\r\nimport FieldError from './FieldError';\r\nimport useWindowDimensions from './../../../global/utils';\r\n\r\nconst Input = ({\r\n    attribute,\r\n    data,\r\n    setData,\r\n    placeholder,\r\n    type,\r\n    svgIcon,\r\n    errors\r\n}) => {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const error = errors[attribute]\r\n    const { width } = useWindowDimensions();    \r\n    const mobile = width < 768 ? true : false\r\n\r\n    const svgStyle = {\r\n        width: mobile ? '20px' : '45px',\r\n        height: mobile ? '20px' : '25px'\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.inputWrapper}>\r\n                <input \r\n                className={error ? [classes.input, classes.inputError].join(' ') : classes.input} \r\n                value={data[attribute]} \r\n                placeholder={placeholder}\r\n                type={!showPassword ? type : 'text'}\r\n                onChange={(e) => {\r\n                    setData({\r\n                        ...data,\r\n                        [attribute]: e.target.value\r\n                    })\r\n                }}/>\r\n                {svgIcon && (<div className={classes.inputIcon}>\r\n                    {svgSprite(svgIcon, svgStyle)}\r\n                </div>)}\r\n                {type === 'password' && (<div \r\n                    className={classes.inputIconPassword}\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    >\r\n                    {svgSprite(!showPassword ? 'OpenEye' : 'CloseEye', svgStyle)}\r\n                </div>)}\r\n\r\n            </div>\r\n\r\n                {!!error && <FieldError \r\n                    classes={classes}\r\n                    textError={error}\r\n                />}\r\n        </>\r\n    )\r\n}\r\nexport default Input"]},"metadata":{},"sourceType":"module"}