{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nexport default function useWindowDimensions() {\n  _s();\n\n  var _useState = useState(1200),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    function getWindowDimensions() {\n      var _window = window,\n          width = _window.innerWidth,\n          height = _window.innerHeight;\n      return {\n        width: width,\n        height: height\n      };\n    }\n\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"Q89KqioSTiR940N6MUjilRzu0SU=\");","map":{"version":3,"sources":["D:/MotichProduction/motich/global/utils.js"],"names":["React","useState","useEffect","useWindowDimensions","windowDimensions","setWindowDimensions","getWindowDimensions","window","width","innerWidth","height","innerHeight","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,EACcC,SADd,QAEO,OAFP;AAOA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAAA,kBAEMF,QAAQ,CAAC,IAAD,CAFd;AAAA,MAEnCG,gBAFmC;AAAA,MAEjBC,mBAFiB;;AAI1CH,EAAAA,SAAS,CAAC,YAAM;AACd,aAASI,mBAAT,GAA+B;AAAA,oBACsBC,MADtB;AAAA,UACTC,KADS,WACrBC,UADqB;AAAA,UACWC,MADX,WACFC,WADE;AAE7B,aAAO;AACLH,QAAAA,KAAK,EAALA,KADK;AAELE,QAAAA,MAAM,EAANA;AAFK,OAAP;AAID;;AACD,aAASE,YAAT,GAAwB;AACtBP,MAAAA,mBAAmB,CAACC,mBAAmB,EAApB,CAAnB;AACD;;AAEDC,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAML,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAOR,gBAAP;AACD;;GArBqBD,mB","sourcesContent":["import React, {\r\n    useState, useEffect\r\n} from 'react'\r\n\r\n\r\n\r\n\r\nexport default function useWindowDimensions() {\r\n  \r\n    const [windowDimensions, setWindowDimensions] = useState(1200);\r\n  \r\n    useEffect(() => {\r\n      function getWindowDimensions() {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        return {\r\n          width,\r\n          height\r\n        };\r\n      }\r\n      function handleResize() {\r\n        setWindowDimensions(getWindowDimensions());\r\n      }\r\n  \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n  \r\n    return windowDimensions;\r\n  }"]},"metadata":{},"sourceType":"module"}