{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MotichProduction\\\\motich\\\\views\\\\auth\\\\AuthLoginView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport classes from './../../styles/views/auth-view-styles.module.scss';\nimport Input from './../../widgets/form/components/Input';\nimport { NET } from './../../network';\nimport cookie from 'react-cookies';\nimport { useRouter } from 'next/router';\n\nconst AuthLoginView = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    email: '',\n    password: '',\n    tokenName: 'userToken'\n  });\n  const router = useRouter();\n  const {\n    0: errorsData,\n    1: setErrorsData\n  } = useState({});\n\n  const dataSender = async () => {\n    fetch(`${NET.BACK_URL}/login`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json' // 'Authorization': 'Bearer ' + this.state.clientToken,\n\n      },\n      withCredentials: true\n    }).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          cookie.save('userToken', data.token);\n          localStorage.setItem('userToken', data.token);\n          router.push('/ru/office');\n        });\n      } else if (response.status === 401) {\n        response.json().then(errors => {\n          if (errors.error === 'password') {\n            setErrorsData(_objectSpread(_objectSpread({}, errorsData), {}, {\n              password: 'Пароль введен неверно'\n            }));\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.wrapper__window,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        attribute: \"email\",\n        data: data,\n        setData: setData,\n        placeholder: \"e-mail\",\n        type: \"text\",\n        svgIcon: \"AuthEmail\",\n        errors: errorsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        attribute: \"password\",\n        data: data,\n        setData: setData,\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        svgIcon: \"AuthPassword\",\n        errors: errorsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnSubSub,\n        children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btn,\n        onClick: dataSender,\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnSub,\n        onClick: () => router.push('/ru/auth/register'),\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AuthLoginView;","map":{"version":3,"sources":["D:/MotichProduction/motich/views/auth/AuthLoginView.js"],"names":["React","useState","classes","Input","NET","cookie","useRouter","AuthLoginView","data","setData","email","password","tokenName","router","errorsData","setErrorsData","dataSender","fetch","BACK_URL","method","body","JSON","stringify","headers","withCredentials","then","response","status","json","save","token","localStorage","setItem","push","errors","error","wrapper","wrapper__window","title","btnSubSub","btn","btnSub"],"mappings":"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","sourcesContent":["import React, {\r\n    useState\r\n} from 'react'\r\nimport classes from './../../styles/views/auth-view-styles.module.scss'\r\nimport Input from './../../widgets/form/components/Input';\r\nimport { NET } from './../../network';\r\nimport cookie from 'react-cookies';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst AuthLoginView = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: '',\r\n        tokenName: 'userToken'\r\n    })\r\n    const router = useRouter()\r\n    const [errorsData, setErrorsData] = useState({})\r\n    const dataSender = async () => {\r\n        fetch(`${NET.BACK_URL}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                // 'Authorization': 'Bearer ' + this.state.clientToken,\r\n            },\r\n            withCredentials: true,\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                response.json().then((data) => {\r\n                    cookie.save('userToken', data.token)\r\n                    localStorage.setItem('userToken', data.token)\r\n                    router.push('/ru/office')\r\n\r\n                })\r\n            } else if (response.status === 401) {\r\n                response.json().then((errors) => {\r\n                    if (errors.error === 'password') {\r\n                        setErrorsData({\r\n                            ...errorsData,\r\n                            password: 'Пароль введен неверно'\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.wrapper__window}>\r\n                <div className={classes.title}>Авторизация</div>\r\n                <Input \r\n                    attribute=\"email\"\r\n                    data={data}\r\n                    setData={setData}\r\n                    placeholder=\"e-mail\"\r\n                    type=\"text\"\r\n                    svgIcon=\"AuthEmail\"\r\n                    errors={errorsData}\r\n                />\r\n                <Input \r\n                    attribute=\"password\"\r\n                    data={data}\r\n                    setData={setData}\r\n                    placeholder=\"Пароль\"\r\n                    type=\"password\"\r\n                    svgIcon=\"AuthPassword\"\r\n                    errors={errorsData}\r\n                />\r\n                <div className={classes.btnSubSub}>Забыли пароль</div>\r\n                <div\r\n                    className={classes.btn}\r\n                    onClick={dataSender}\r\n                >Вход</div>\r\n                <div \r\n                    className={classes.btnSub}\r\n                    onClick={() => router.push('/ru/auth/register')}\r\n                    >Регистрация</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AuthLoginView"]},"metadata":{},"sourceType":"module"}