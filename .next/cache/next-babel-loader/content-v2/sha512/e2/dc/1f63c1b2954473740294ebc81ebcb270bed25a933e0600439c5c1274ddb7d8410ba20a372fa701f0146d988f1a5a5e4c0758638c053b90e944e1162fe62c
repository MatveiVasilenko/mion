{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport ContextApp from './../../context/App/ContextApp';\nimport { NET } from './../../network';\nimport cookie from 'react-cookies';\nimport { useRouter } from 'next/router';\nimport { createToken } from './../../context/App/actions';\n\nconst ProtectedOffice = ({\n  children\n}) => {\n  const {\n    dispatchApp\n  } = useContext(ContextApp);\n  const router = useRouter();\n  const userToken = cookie.load('userToken');\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n\n  const dataSender = async () => {\n    fetch(`${NET.BACK_URL}/profile`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userToken}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          setUser(data);\n          dispatchApp(createToken(data.user));\n        });\n      } else if (response.status === 401) {\n        router.push('/ru/auth/login');\n      }\n    });\n  };\n\n  if (userToken) {\n    if (!user) {\n      dataSender();\n    } else {}\n  } else {\n    useEffect(() => {\n      router.push('/ru/auth/login');\n    }, []);\n  }\n\n  console.log(userToken);\n\n  if (!userToken) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children\n  });\n};\n\nexport default ProtectedOffice;","map":null,"metadata":{},"sourceType":"module"}