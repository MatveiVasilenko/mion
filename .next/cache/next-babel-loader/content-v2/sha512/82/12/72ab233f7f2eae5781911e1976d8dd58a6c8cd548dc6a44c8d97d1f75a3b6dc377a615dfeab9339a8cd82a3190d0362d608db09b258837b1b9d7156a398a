{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { useContext, useState } from 'react';\nimport ContextApp from './../../context/App/ContextApp';\nimport { NET } from './../../network';\nimport cookie from 'react-cookies';\nimport { useRouter } from 'next/router';\n\nconst ProtectedOffice = ({\n  children\n}) => {\n  const router = useRouter();\n  const userToken = cookie.load('userToken');\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n\n  const dataSender = async () => {\n    fetch(`${NET.BACK_URL}/profile`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userToken}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          setUser(data);\n        });\n      } else if (response.status === 401) {\n        router.push('/ru/auth/login');\n      }\n    });\n  };\n\n  if (userToken) {\n    dataSender();\n  } else {\n    () => router.push('/ru/auth/login');\n  }\n\n  const PropsChildren = React.Children.map(children, child => {\n    return /*#__PURE__*/React.cloneElement(child, user);\n  });\n  console.log(user); // if (!user) { return null }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user ? PropsChildren : children\n  }, void 0, false);\n};\n\nexport default ProtectedOffice;","map":{"version":3,"sources":["D:/MotichProduction/motich/global/decorators/ProtectedOffice.js"],"names":["React","useContext","useState","ContextApp","NET","cookie","useRouter","ProtectedOffice","children","router","userToken","load","user","setUser","dataSender","fetch","BACK_URL","method","headers","then","response","status","json","data","push","PropsChildren","Children","map","child","cloneElement","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,UADJ,EACgBC,QADhB,QAEO,OAFP;AAGA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACrBC,EAAAA;AADqB,CAAD,KAElB;AACF,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,SAAS,GAAGL,MAAM,CAACM,IAAP,CAAY,WAAZ,CAAlB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMY,UAAU,GAAG,YAAY;AAC3BC,IAAAA,KAAK,CAAE,GAAEX,GAAG,CAACY,QAAS,UAAjB,EAA4B;AAC7BC,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAkB,UAASR,SAAU;AAHhC;AAFoB,KAA5B,CAAL,CAOGS,IAPH,CAOSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBI,IAAD,IAAU;AAC3BV,UAAAA,OAAO,CAACU,IAAD,CAAP;AACH,SAFD;AAGH,OAJD,MAIO,IAAIH,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAChCZ,QAAAA,MAAM,CAACe,IAAP,CAAY,gBAAZ;AACH;AACJ,KAfD;AAgBH,GAjBD;;AAkBA,MAAId,SAAJ,EAAe;AACXI,IAAAA,UAAU;AACb,GAFD,MAEO;AACH,UAAML,MAAM,CAACe,IAAP,CAAY,gBAAZ,CAAN;AACH;;AACD,QAAMC,aAAa,GAAGzB,KAAK,CAAC0B,QAAN,CAAeC,GAAf,CAAmBnB,QAAnB,EAA8BoB,KAAD,IAAW;AAC1D,wBAAO5B,KAAK,CAAC6B,YAAN,CAAmBD,KAAnB,EAA0BhB,IAA1B,CAAP;AACH,GAFqB,CAAtB;AAGAkB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ,EA9BE,CA+BF;;AACA,sBACI;AAAA,cACKA,IAAI,GAAGa,aAAH,GAAmBjB;AAD5B,mBADJ;AAKH,CAvCD;;AAwCA,eAAeD,eAAf","sourcesContent":["import React, {\r\n    useContext, useState\r\n} from 'react'\r\nimport ContextApp from './../../context/App/ContextApp';\r\nimport { NET } from './../../network';\r\nimport cookie from 'react-cookies';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst ProtectedOffice = ({\r\n    children\r\n}) => {\r\n    const router = useRouter()\r\n    const userToken = cookie.load('userToken')\r\n    const [user, setUser] = useState(null)\r\n    const dataSender = async () => {\r\n        fetch(`${NET.BACK_URL}/profile`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${userToken}`\r\n            }\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                response.json().then((data) => {\r\n                    setUser(data)                    \r\n                })\r\n            } else if (response.status === 401) {\r\n                router.push('/ru/auth/login')\r\n            }\r\n        })\r\n    }\r\n    if (userToken) {\r\n        dataSender()\r\n    } else {\r\n        () => router.push('/ru/auth/login')\r\n    }\r\n    const PropsChildren = React.Children.map(children, (child) => {\r\n        return React.cloneElement(child, user)\r\n    })\r\n    console.log(user)\r\n    // if (!user) { return null }\r\n    return (\r\n        <>\r\n            {user ? PropsChildren : children}\r\n        </>\r\n    )\r\n}\r\nexport default ProtectedOffice"]},"metadata":{},"sourceType":"module"}