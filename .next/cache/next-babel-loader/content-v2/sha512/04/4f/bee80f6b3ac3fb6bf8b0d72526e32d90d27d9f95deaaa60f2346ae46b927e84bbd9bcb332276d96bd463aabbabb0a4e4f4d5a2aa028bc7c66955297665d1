{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport classes from './../../styles/views/auth-view-styles.module.scss';\nimport { NET } from './../../network';\nimport ContextApp from './../../context/App/ContextApp';\nimport Input from './../../widgets/form/components/Input';\nimport svgSprite from './../../project/svg/svgSprite';\nimport { useRouter } from 'next/router';\nimport { createToken } from './../../context/App/actions';\nimport cookie from 'react-cookies';\n\nconst AuthRegisterView = () => {\n  const {\n    dispatchApp\n  } = useContext(ContextApp);\n  const router = useRouter();\n  console.log(router.query.refferal);\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    name: '',\n    surname: '',\n    password: '',\n    email: '',\n    phone: '',\n    tokenName: 'userToken',\n    politic: false\n  });\n  const {\n    0: errorsData,\n    1: setErrorsData\n  } = useState({});\n  useEffect(() => {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      refferal_key: router.query.refferal ? router.query.refferal : null\n    }));\n  }, [router]);\n\n  const dataSender = async () => {\n    fetch(`${NET.BACK_URL}/register`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json' // 'X-Requested-With': 'XMLHttpRequest'\n        // 'Authorization': 'Bearer ' + this.state.clientToken,\n\n      },\n      withCredentials: true\n    }).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          console.log(data.token); // dispatchApp(createToken(data.token))\n\n          localStorage.setItem('userToken', data.token);\n          cookie.save('userToken', data.token);\n          router.push('/ru/office');\n        });\n      } else if (response.status === 401) {\n        response.json().then(errors => {\n          // if (errors.error === 'password') {\n          //     setErrorsData({\n          //         ...errorsData,\n          //         password: 'Пароль введен неверно'\n          //     })\n          // } else if (errors.error === 'no-user') {\n          //     setErrorsData({\n          //         ...errorsData,\n          //         email: 'Пользователь не зарегестрирован'\n          //     })\n          // } else {\n          const keys = Object.keys(errors.error);\n          let acc = {};\n          keys.map(el => {\n            console.log(errors.error[el]);\n\n            if (errors.error[el][0] === 'The email has already been taken.') {\n              return acc[el] = 'Пользователь уже зарегистрирован.';\n            } else if (errors.error[el][0] === 'The name field is required.' || errors.error[el][0] === 'The surname field is required.' || errors.error[el][0] === 'The email field is required.' || errors.error[el][0] === 'The phone field is required.' || errors.error[el][0] === 'The password field is required.') {\n              return acc[el] = 'Поле должно быть заполнено';\n            } else {\n              return acc[el] = errors.error[el];\n            }\n          });\n          setErrorsData(acc); // }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.wrapper__window,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.wrapper__icon,\n        children: svgSprite('AuthForm', {\n          width: '40px'\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classes.title,\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }), /*#__PURE__*/_jsx(Input, {\n        attribute: \"name\",\n        data: data,\n        setData: setData,\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        type: \"text\",\n        svgIcon: \"AuthProfile\",\n        errors: errorsData\n      }), /*#__PURE__*/_jsx(Input, {\n        attribute: \"surname\",\n        data: data,\n        setData: setData,\n        placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n        type: \"text\",\n        svgIcon: \"AuthProfile\",\n        errors: errorsData\n      }), /*#__PURE__*/_jsx(Input, {\n        attribute: \"email\",\n        data: data,\n        setData: setData,\n        placeholder: \"e-mail\",\n        type: \"email\",\n        svgIcon: \"AuthEmail\",\n        errors: errorsData\n      }), /*#__PURE__*/_jsx(Input, {\n        attribute: \"phone\",\n        data: data,\n        setData: setData,\n        placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n        type: \"tel\",\n        svgIcon: \"AuthPhone\",\n        errors: errorsData\n      }), /*#__PURE__*/_jsx(Input, {\n        attribute: \"password\",\n        data: data,\n        setData: setData,\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        svgIcon: \"AuthPassword\",\n        errors: errorsData\n      }), /*#__PURE__*/_jsx(Input, {\n        attribute: \"repeatPassword\",\n        data: data,\n        setData: setData,\n        placeholder: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        svgIcon: \"AuthPassword\",\n        errors: errorsData\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.politic,\n        onClick: () => setData(_objectSpread(_objectSpread({}, data), {}, {\n          politic: !data.politic\n        })),\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          children: svgSprite(data.politic ? 'AuthCheckFalse' : 'AuthCheckTrue', {\n            width: data.politic ? '40px' : '45px',\n            height: '45px'\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            'margin-left': data.politic ? '4px' : 0\n          },\n          children: \"\\u042F \\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u0441 \\u043F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u043E\\u0439 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classes.btn,\n        onClick: dataSender,\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      })]\n    })\n  });\n};\n\nexport default AuthRegisterView;","map":null,"metadata":{},"sourceType":"module"}