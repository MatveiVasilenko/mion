{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nexport default function useWindowDimensions() {\n  _s();\n\n  function getWindowDimensions() {\n    var _window = window,\n        width = _window.innerWidth,\n        height = _window.innerHeight;\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  var _useState = useState(getWindowDimensions()),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");","map":{"version":3,"sources":["D:/MotichProduction/motich/global/utils.js"],"names":["React","useState","useEffect","useWindowDimensions","getWindowDimensions","window","width","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,EACcC,SADd,QAEO,OAFP;AAOA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,WAASC,mBAAT,GAA+B;AAAA,kBACsBC,MADtB;AAAA,QACTC,KADS,WACrBC,UADqB;AAAA,QACWC,MADX,WACFC,WADE;AAE7B,WAAO;AACLH,MAAAA,KAAK,EAALA,KADK;AAELE,MAAAA,MAAM,EAANA;AAFK,KAAP;AAID;;AAP2C,kBAQMP,QAAQ,CAACG,mBAAmB,EAApB,CARd;AAAA,MAQnCM,gBARmC;AAAA,MAQjBC,mBARiB;;AAU1CT,EAAAA,SAAS,CAAC,YAAM;AACd,aAASU,YAAT,GAAwB;AACtBD,MAAAA,mBAAmB,CAACP,mBAAmB,EAApB,CAAnB;AACD;;AAEDC,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAMP,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACD;;GApBqBP,mB","sourcesContent":["import React, {\r\n    useState, useEffect\r\n} from 'react'\r\n\r\n\r\n\r\n\r\nexport default function useWindowDimensions() {\r\n  function getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height\r\n    };\r\n  }\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  \r\n    useEffect(() => {\r\n      function handleResize() {\r\n        setWindowDimensions(getWindowDimensions());\r\n      }\r\n  \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n  \r\n    return windowDimensions;\r\n  }"]},"metadata":{},"sourceType":"module"}