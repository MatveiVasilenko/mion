{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport classes from './../../../styles/widgets/form-styles.module.scss';\nimport svgSprite from './../../../project/svg/svgSprite';\nimport FieldError from './FieldError';\n\nconst Input = ({\n  attribute,\n  data,\n  setData,\n  placeholder,\n  type,\n  svgIcon,\n  errors\n}) => {\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const error = errors[attribute];\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.inputWrapper,\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        className: error ? [classes.input, classes.inputError].join(' ') : classes.input,\n        value: data[attribute],\n        placeholder: placeholder,\n        type: !showPassword ? type : 'text',\n        onChange: e => {\n          setData(_objectSpread(_objectSpread({}, data), {}, {\n            [attribute]: e.target.value\n          }));\n        }\n      }), svgIcon && /*#__PURE__*/_jsx(\"div\", {\n        className: classes.inputIcon,\n        children: svgSprite(svgIcon, {\n          className: classes.svgInput\n        })\n      }), type === 'password' && /*#__PURE__*/_jsx(\"div\", {\n        className: classes.inputIconPassword,\n        onClick: () => setShowPassword(!showPassword),\n        children: svgSprite(!showPassword ? 'OpenEye' : 'CloseEye', {\n          className: classes.svgInput\n        })\n      })]\n    }), !!error && /*#__PURE__*/_jsx(FieldError, {\n      classes: classes,\n      textError: error\n    })]\n  });\n};\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}