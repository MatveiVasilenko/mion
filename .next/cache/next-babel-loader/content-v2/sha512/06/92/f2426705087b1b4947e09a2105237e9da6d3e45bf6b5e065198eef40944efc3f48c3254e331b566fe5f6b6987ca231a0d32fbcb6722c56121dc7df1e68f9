{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport ContextApp from './../../context/App/ContextApp';\nimport { NET } from './../../network';\nimport cookie from 'react-cookies';\nimport { useRouter } from 'next/router';\nimport { createToken } from './../../context/App/actions';\n\nconst ProtectedOffice = ({\n  children\n}) => {\n  const {\n    dispatchApp\n  } = useContext(ContextApp);\n  const router = useRouter();\n  const userToken = cookie.load('userToken');\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n\n  const dataSender = async () => {\n    fetch(`${NET.BACK_URL}/profile`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userToken}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          setUser(data);\n          dispatchApp(createToken(data.user));\n        });\n      } else if (response.status === 401) {\n        router.push('/ru/auth/login');\n      }\n    });\n  };\n\n  if (userToken) {\n    if (!user) {\n      dataSender();\n    } else {}\n  } else {\n    useEffect(() => {\n      router.push('/ru/auth/login');\n    }, []);\n  }\n\n  console.log(userToken);\n\n  if (!userToken) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\nexport default ProtectedOffice;","map":{"version":3,"sources":["D:/MotichProduction/motich/global/decorators/ProtectedOffice.js"],"names":["React","useContext","useState","useEffect","ContextApp","NET","cookie","useRouter","createToken","ProtectedOffice","children","dispatchApp","router","userToken","load","user","setUser","dataSender","fetch","BACK_URL","method","headers","then","response","status","json","data","push","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,UADJ,EACgBC,QADhB,EAC0BC,SAD1B,QAEO,OAFP;AAGA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACrBC,EAAAA;AADqB,CAAD,KAElB;AACF,QAAM;AAACC,IAAAA;AAAD,MAAgBV,UAAU,CAACG,UAAD,CAAhC;AACA,QAAMQ,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,SAAS,GAAGP,MAAM,CAACQ,IAAP,CAAY,WAAZ,CAAlB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMe,UAAU,GAAG,YAAY;AAC3BC,IAAAA,KAAK,CAAE,GAAEb,GAAG,CAACc,QAAS,UAAjB,EAA4B;AAC7BC,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAkB,UAASR,SAAU;AAHhC;AAFoB,KAA5B,CAAL,CAOGS,IAPH,CAOSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBI,IAAD,IAAU;AAC3BV,UAAAA,OAAO,CAACU,IAAD,CAAP;AACAf,UAAAA,WAAW,CAACH,WAAW,CAACkB,IAAI,CAACX,IAAN,CAAZ,CAAX;AACH,SAHD;AAIH,OALD,MAKO,IAAIQ,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAChCZ,QAAAA,MAAM,CAACe,IAAP,CAAY,gBAAZ;AACH;AACJ,KAhBD;AAiBH,GAlBD;;AAmBA,MAAId,SAAJ,EAAe;AACX,QAAI,CAACE,IAAL,EAAW;AACPE,MAAAA,UAAU;AACb,KAFD,MAEO,CAEN;AACJ,GAND,MAMO;AACHd,IAAAA,SAAS,CAAC,MAAM;AACZS,MAAAA,MAAM,CAACe,IAAP,CAAY,gBAAZ;AACH,KAFQ,EAEN,EAFM,CAAT;AAGH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;;AACA,MAAI,CAACA,SAAL,EAAgB;AAAE,WAAO,IAAP;AAAa;;AAC/B,sBACI;AAAA,cACKH;AADL,mBADJ;AAKH,CA5CD;;AA6CA,eAAeD,eAAf","sourcesContent":["import React, {\r\n    useContext, useState, useEffect\r\n} from 'react'\r\nimport ContextApp from './../../context/App/ContextApp';\r\nimport { NET } from './../../network';\r\nimport cookie from 'react-cookies';\r\nimport { useRouter } from 'next/router';\r\nimport { createToken } from './../../context/App/actions';\r\n\r\nconst ProtectedOffice = ({\r\n    children\r\n}) => {\r\n    const {dispatchApp} = useContext(ContextApp)\r\n    const router = useRouter()\r\n    const userToken = cookie.load('userToken')\r\n    const [user, setUser] = useState(null)\r\n    const dataSender = async () => {\r\n        fetch(`${NET.BACK_URL}/profile`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${userToken}`\r\n            }\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                response.json().then((data) => {\r\n                    setUser(data)                    \r\n                    dispatchApp(createToken(data.user))\r\n                })\r\n            } else if (response.status === 401) {\r\n                router.push('/ru/auth/login')\r\n            }\r\n        })\r\n    }\r\n    if (userToken) {\r\n        if (!user) {\r\n            dataSender()\r\n        } else {\r\n\r\n        }\r\n    } else {\r\n        useEffect(() => {\r\n            router.push('/ru/auth/login')\r\n        }, [])\r\n    }\r\n    console.log(userToken)\r\n    if (!userToken) { return null }\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\nexport default ProtectedOffice"]},"metadata":{},"sourceType":"module"}