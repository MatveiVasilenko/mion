{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MotichProduction\\\\motich\\\\views\\\\office\\\\main\\\\components\\\\MainHead.js\";\nimport React, { useContext, useEffect } from 'react';\nimport HeaderItem from '../../../../widgets/headerOffice/HeaderItem';\nimport ContextApp from './../../../../context/App/ContextApp';\nimport { NET } from './../../../../network';\n\nconst MainHead = ({\n  classes\n}) => {\n  const {\n    stateApp\n  } = useContext(ContextApp);\n  const user = stateApp.user;\n  const [userData, setUserData] = useState(null);\n  useEffect(async () => {\n    let cleanupFunction = false;\n\n    if (user) {\n      (async () => {\n        fetch(`${NET.BACK_URL}/refferals/${user.id}`, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json' // 'X-Requested-With': 'XMLHttpRequest'\n            // 'Authorization': 'Bearer ' + this.state.clientToken,\n\n          },\n          withCredentials: true\n        }).then(response => {\n          if (response.status === 200) {\n            response.json().then(data => {\n              if (!cleanupFunction) setUserData(data);\n            });\n          }\n        });\n      })();\n    }\n\n    return () => cleanupFunction = true;\n  }, []);\n  const [counter, setCounter] = useState({\n    all: 0,\n    realMoney: 0,\n    futureMoney: 0,\n    active: 0\n  });\n  useEffect(() => {\n    if (userData) {\n      let active = 0;\n      let all = 0;\n      let realMoney = 0;\n      let futureMoney = 0;\n\n      for (let value in userData) {\n        if (userData[value]) {\n          userData[value].map(el => {\n            all++;\n\n            if (el.status === '1') {\n              active++;\n\n              if (value === 'first') {\n                realMoney = realMoney + 10;\n                futureMoney = futureMoney + 10;\n              } else if (value === 'second') {\n                realMoney = realMoney + 5;\n                futureMoney = futureMoney + 5;\n              } else if (value === 'third') {\n                futureMoney = futureMoney + 3;\n              }\n            }\n          });\n        }\n      }\n\n      setCounter({\n        all,\n        active,\n        realMoney,\n        futureMoney\n      });\n    }\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.refferalHead\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\nexport default MainHead;","map":{"version":3,"sources":["D:/MotichProduction/motich/views/office/main/components/MainHead.js"],"names":["React","useContext","useEffect","HeaderItem","ContextApp","NET","MainHead","classes","stateApp","user","userData","setUserData","useState","cleanupFunction","fetch","BACK_URL","id","method","headers","withCredentials","then","response","status","json","data","counter","setCounter","all","realMoney","futureMoney","active","value","map","el","refferalHead"],"mappings":"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","sourcesContent":["import React, {\r\n    useContext, useEffect\r\n} from 'react'\r\nimport HeaderItem from '../../../../widgets/headerOffice/HeaderItem'\r\nimport ContextApp from './../../../../context/App/ContextApp';\r\nimport { NET } from './../../../../network';\r\n\r\nconst MainHead = ({\r\n    classes\r\n}) => {\r\n    const {stateApp} = useContext(ContextApp)\r\n    const user = stateApp.user\r\n    \r\n    const [userData, setUserData] = useState(null)\r\n    useEffect(async () => {\r\n        let cleanupFunction = false;\r\n        if (user) {\r\n            (async () => {\r\n                fetch(`${NET.BACK_URL}/refferals/${user.id}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        // 'X-Requested-With': 'XMLHttpRequest'\r\n                        // 'Authorization': 'Bearer ' + this.state.clientToken,\r\n                    },\r\n                    withCredentials: true,\r\n                }).then((response) => {\r\n                    if (response.status === 200) {\r\n                        response.json().then((data) => {\r\n                            if(!cleanupFunction) setUserData(data)   \r\n                            \r\n                        })\r\n                    }\r\n                })\r\n            })()            \r\n        }\r\n        return () => cleanupFunction = true\r\n    }, []);\r\n    const [counter, setCounter] = useState({\r\n        all: 0,\r\n        realMoney: 0,\r\n        futureMoney: 0,\r\n        active: 0\r\n    })\r\n    useEffect(() => {\r\n        if (userData) {\r\n            let active = 0\r\n            let all = 0\r\n            let realMoney = 0\r\n            let futureMoney = 0\r\n            for (let value in userData) {\r\n                if (userData[value]) {\r\n                    userData[value].map((el) => {\r\n                        all++\r\n                        if (el.status === '1') {\r\n                            active++\r\n                            if (value === 'first') {\r\n                                realMoney = realMoney + 10\r\n                                futureMoney = futureMoney + 10\r\n                            } else if (value === 'second') {\r\n                                realMoney = realMoney + 5\r\n                                futureMoney = futureMoney + 5\r\n                            } else if (value === 'third') {\r\n                                futureMoney = futureMoney + 3\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            setCounter({all, active, realMoney, futureMoney})\r\n        }\r\n    }, [userData])\r\n    return (\r\n        <div className={classes.refferalHead}>\r\n            {/* <HeaderItem \r\n                classes={classes}\r\n                user={user}\r\n            /> */}\r\n        </div>    \r\n    )\r\n}\r\nexport default MainHead"]},"metadata":{},"sourceType":"module"}